name: CI Maven-Build, -Test & Docker-Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  mvn_build_and_test:
    name: Maven - build & test jar
    runs-on: ubuntu-latest
    services:
      # Description for runner-local postgres-server
      postgres:
        image: postgres
        env:
          # Values based on "src/main/resources/application.properties"
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: Eisar1#?732
          POSTGRES_PORT: 5432
          POSTGRES_DB: quickplan
        # Options to make the runner wait until the docker container is ready
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        # Forward Docker's port 5432 to the host's port 5432
        ports:
          - 5432:5432
    steps:
    - name: Check out repository
      uses: actions/checkout@v4
    - name: Set up Eclipse Temurin JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: "temurin"
        java-version: "17"
        cache: maven
    - name: Build Project
      run: mvn -B install --file ./pom.xml
    - name: Upload project's .jar as an artifact
      uses: actions/upload-artifact@v4
      with:
        name: quickplan-jar
        path: target/quickplan.jar
  
  docker_build_and_release:
    name: Docker - build & release image
    needs: mvn_build_and_test
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v4
    - name: Get `quickplan.jar`
      uses: actions/download-artifact@v4
      with:
        name: quickplan-jar
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        tags: quickplan:latest
        outputs: type=docker,dest=/tmp/image.tar
    - name: Upload Docker-image (temporary)
      uses: actions/upload-artifact@v4
      with:
        name: quickplan-docker-image.tar
        path: /tmp/image.tar
    # - name: Log in to the Container registry
    #     uses: docker/login-action@v3
    #     with:
    #       registry: ${{ env.REGISTRY }}
    #       username: ${{ github.actor }}
    #       password: ${{ secrets.GITHUB_TOKEN }}
    # - name: Extract metadata (tags, labels) for Docker
    #     id: meta
    #     uses: docker/metadata-action@v5
    #     with:
    #       images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
    # - name: Build and push Docker image
    #     uses: docker/build-push-action@v5
    #     with:
    #       context: .
    #       push: true
    #       tags: ${{ steps.meta.outputs.tags }}
    #       labels: ${{ steps.meta.outputs.labels }}
